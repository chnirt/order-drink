{"version":3,"sources":["validation/loginSchema.js","pages/login/loginTab/index.js","validation/registerSchema.js","pages/login/registerTab/index.js","pages/login/index.js","components/Copyright/index.js"],"names":["loginSchema","Yup","username","required","password","useStyles","makeStyles","theme","paper","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","breadcrumb","LoginTab","setOpen","handleChangeTabIndex","classes","login","useAuth","replace","useHistory","state","useLocation","darkState","useCustomTheme","t","useTranslation","from","pathname","useFormik","initialValues","validationSchema","onSubmit","values","a","resetForm","handleChange","handleBlur","handleSubmit","errors","touched","isSubmitting","className","Avatar","variant","avatar","src","WhiteLogo","Logo","Typography","component","noValidate","TextField","fullWidth","name","autoComplete","id","label","error","helperText","value","onChange","onBlur","type","Button","color","disabled","Grid","container","item","xs","Link","onClick","Box","mt","Copyright","registerSchema","confirmPassword","when","is","val","length","then","oneOf","checked","RegisterTab","register","setFieldValue","FormControl","formControl","FormControlLabel","control","Checkbox","FormHelperText","TabPanel","props","children","index","other","role","hidden","aria-labelledby","p","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","backdrop","zIndex","drawer","Login","useTheme","useState","setValue","open","sm","md","Paper","elevation","square","axis","direction","onChangeIndex","dir","align","href","Date","getFullYear"],"mappings":"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","file":"static/js/6.295661da.chunk.js","sourcesContent":["import * as Yup from 'yup'\n\nexport const loginSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n})\n","import React from 'react'\nimport {\n  makeStyles,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Link,\n  Box\n} from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useFormik } from 'formik'\n\nimport Logo from '../../../assets/images/logo.png'\nimport WhiteLogo from '../../../assets/images/whitelogo.png'\nimport Copyright from '../../../components/Copyright'\nimport { loginSchema } from '../../../validation/loginSchema'\nimport { useAuth } from '../../../context/useAuth'\nimport { useCustomTheme } from '../../../context/useCustomTheme'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nconst breadcrumb = 'src.pages.login'\n\nexport default function LoginTab({ setOpen, handleChangeTabIndex }) {\n  const classes = useStyles()\n  let { login } = useAuth()\n  let { replace } = useHistory()\n  let { state } = useLocation()\n  const { darkState } = useCustomTheme()\n  const { t } = useTranslation()\n\n  let { from } = state || { from: { pathname: '/' } }\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    errors,\n    touched,\n    isSubmitting,\n    resetForm\n  } = useFormik({\n    initialValues: {\n      username: 'chnirt',\n      password: '0'\n      // username: '',\n      // password: ''\n    },\n    validationSchema: loginSchema,\n    onSubmit: async (values) => {\n      // alert(JSON.stringify(values, null, 2));\n      setOpen(true)\n      const result = await login(values.username, values.password)\n\n      if (result) {\n        resetForm()\n        replace(from)\n      }\n      setOpen(false)\n    }\n  })\n\n  return (\n    <div className={classes.paper}>\n      <Avatar\n        variant=\"square\"\n        className={classes.avatar}\n        src={darkState ? WhiteLogo : Logo}\n      />\n      <Typography component=\"h1\" variant=\"h5\">\n        {t(`${breadcrumb}.LoginPage`)}\n      </Typography>\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"username\"\n          autoComplete=\"username\"\n          id={\n            errors.username && touched.username\n              ? 'standard-error-helper-text'\n              : 'username'\n          }\n          label={\n            errors.username && touched.username\n              ? 'Error Username'\n              : t(`${breadcrumb}.Username`)\n          }\n          error={errors.username && touched.username ? true : false}\n          helperText={\n            errors.username && touched.username ? errors.username : false\n          }\n          value={values.username}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          autoComplete=\"current-password\"\n          type=\"password\"\n          id={\n            errors.password && touched.password\n              ? 'standard-error-helper-text'\n              : 'password'\n          }\n          label={\n            errors.password && touched.password\n              ? 'Error Password'\n              : t(`${breadcrumb}.Password`)\n          }\n          error={errors.password && touched.password ? true : false}\n          helperText={\n            errors.password && touched.password ? errors.password : false\n          }\n          value={values.password}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={isSubmitting}\n        >\n          {t(`${breadcrumb}.Login`)}\n        </Button>\n        <Grid container>\n          <Grid item xs>\n            {/* <Link\n            variant=\"body2\"\n            onClick={() => {\n              handleChangeTabIndex(1)\n              resetForm()\n              // push('/register')\n            }}\n          >\n            {t(`${breadcrumb}.ForgotPassword`)}\n          </Link> */}\n          </Grid>\n          <Grid item>\n            <Link\n              variant=\"body2\"\n              onClick={() => {\n                handleChangeTabIndex(1)\n                resetForm()\n              }}\n            >\n              {t(`${breadcrumb}.DHAASU`)}\n            </Link>\n          </Grid>\n        </Grid>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </form>\n    </div>\n  )\n}\n","import * as Yup from 'yup'\n\nexport const registerSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required'),\n  confirmPassword: Yup.string()\n    .required('Confirm Password is required')\n    .when('password', {\n      is: val => (val && val.length > 0 ? true : false),\n      then: Yup.string().oneOf(\n        [Yup.ref('password')],\n        'Both password need to be the same'\n      )\n    }),\n  checked: Yup.bool().oneOf([true], 'You must agree the terms and conditions')\n})\n","import React from 'react'\nimport {\n  makeStyles,\n  Avatar,\n  Typography,\n  Grid,\n  TextField,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  FormHelperText,\n  Button,\n  Link,\n  Box\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport { useFormik } from 'formik'\n\nimport Logo from '../../../assets/images/logo.png'\nimport WhiteLogo from '../../../assets/images/whitelogo.png'\nimport Copyright from '../../../components/Copyright'\nimport { useCustomTheme } from '../../../context/useCustomTheme'\nimport { registerSchema } from '../../../validation/registerSchema'\nimport { useAuth } from '../../../context/useAuth'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nconst breadcrumb = 'src.pages.login'\n\nexport default function RegisterTab({ setOpen, handleChangeTabIndex }) {\n  const classes = useStyles()\n  const { darkState } = useCustomTheme()\n  const { t } = useTranslation()\n  let { register } = useAuth()\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    errors,\n    touched,\n    isSubmitting,\n    resetForm,\n    setFieldValue\n  } = useFormik({\n    initialValues: {\n      username: 'chnirt',\n      password: '0',\n      confirmPassword: '0',\n      checked: true\n    },\n    validationSchema: registerSchema,\n    onSubmit: async values => {\n      // alert(JSON.stringify(values, null, 2))\n\n      setOpen(true)\n      const result = await register(values.username, values.password)\n\n      if (result) {\n        handleChangeTabIndex(0)\n\n        resetForm()\n      }\n      setOpen(false)\n    }\n  })\n\n  return (\n    <div className={classes.paper}>\n      <Avatar\n        variant=\"square\"\n        className={classes.avatar}\n        src={darkState ? WhiteLogo : Logo}\n      />\n      <Typography component=\"h1\" variant=\"h5\">\n        {t(`${breadcrumb}.RegisterPage`)}\n      </Typography>\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <Grid container spacing={2}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"username\"\n            autoComplete=\"username\"\n            id={\n              errors.username && touched.username\n                ? 'standard-error-helper-text'\n                : 'username'\n            }\n            label={\n              errors.username && touched.username\n                ? 'Error Username'\n                : t(`${breadcrumb}.Username`)\n            }\n            error={errors.username && touched.username ? true : false}\n            helperText={\n              errors.username && touched.username ? errors.username : false\n            }\n            value={values.username}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            autoComplete=\"current-password\"\n            type=\"password\"\n            id={\n              errors.password && touched.password\n                ? 'standard-error-helper-text'\n                : 'password'\n            }\n            label={\n              errors.password && touched.password\n                ? 'Error Password'\n                : t(`${breadcrumb}.Password`)\n            }\n            error={errors.password && touched.password ? true : false}\n            helperText={\n              errors.password && touched.password ? errors.password : false\n            }\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            autoComplete=\"confirm-password\"\n            type=\"password\"\n            id={\n              errors.confirmPassword && touched.confirmPassword\n                ? 'standard-error-helper-text'\n                : 'confirmPassword'\n            }\n            label={\n              errors.confirmPassword && touched.confirmPassword\n                ? 'Error Confirm Password'\n                : t(`${breadcrumb}.ConfirmPassword`)\n            }\n            error={\n              errors.confirmPassword && touched.confirmPassword ? true : false\n            }\n            helperText={\n              errors.confirmPassword && touched.confirmPassword\n                ? errors.confirmPassword\n                : false\n            }\n            value={values.confirmPassword}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <Grid item xs={12}>\n            <FormControl\n              required\n              error={errors.checked && touched.checked ? errors.checked : false}\n              component=\"fieldset\"\n              className={classes.formControl}\n            >\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    value=\"allowExtraEmails\"\n                    color=\"primary\"\n                    checked={values.checked}\n                    onChange={() => {\n                      setFieldValue('checked', !values.checked)\n                    }}\n                  />\n                }\n                label={t(`${breadcrumb}.IATTTAC`)}\n              />\n              {errors.checked && touched.checked ? (\n                <FormHelperText>{errors.checked}</FormHelperText>\n              ) : (\n                false\n              )}\n            </FormControl>\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={isSubmitting}\n        >\n          {t(`${breadcrumb}.Register`)}\n        </Button>\n        <Grid container>\n          <Grid item xs />\n          <Grid item>\n            <Link\n              variant=\"body2\"\n              onClick={() => {\n                handleChangeTabIndex(0)\n                resetForm()\n                // push('/register')\n              }}\n            >\n              {t(`${breadcrumb}.AHACSI`)}\n            </Link>\n          </Grid>\n        </Grid>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </form>\n    </div>\n  )\n}\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\n// import { AppBar, Tabs, Tab } from '@material-ui/core'\nimport SwipeableViews from 'react-swipeable-views'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport LoginTab from './loginTab'\nimport RegisterTab from './registerTab'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n}\n\n// function a11yProps(index) {\n//   return {\n//     id: `full-width-tab-${index}`,\n//     'aria-controls': `full-width-tabpanel-${index}`\n//   }\n// }\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}))\n\nexport default function Login() {\n  const classes = useStyles()\n  const theme = useTheme()\n\n  const [value, setValue] = useState(0)\n\n  const handleChangeTabIndex = index => {\n    setValue(index)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Fragment>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          {/* <AppBar position=\"static\" color=\"default\">\n            <Tabs\n              value={value}\n              onChange={handleChangeTab}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"fullWidth\"\n              aria-label=\"full width tabs example\"\n            >\n              <Tab label=\"Login\" {...a11yProps(0)} />\n              <Tab label=\"Register\" {...a11yProps(1)} />\n            </Tabs>\n          </AppBar> */}\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            onChangeIndex={handleChangeTabIndex}\n          >\n            <TabPanel value={value} index={0} dir={theme.direction}>\n              <LoginTab {...{ setOpen, handleChangeTabIndex }} />\n            </TabPanel>\n            <TabPanel value={value} index={1} dir={theme.direction}>\n              <RegisterTab {...{ setOpen, handleChangeTabIndex }} />\n            </TabPanel>\n          </SwipeableViews>\n        </Grid>\n      </Grid>\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport { useTranslation } from 'react-i18next'\n\nexport default function Copyright() {\n  const { t } = useTranslation()\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {t('src.components.Copyright.CopyRight') + ' © '}\n      <Link color=\"inherit\" href=\"https://github.com/chnirt\">\n        Chnirt\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n"],"sourceRoot":""}