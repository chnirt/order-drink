{"version":3,"sources":["validation/loginSchema.js","pages/login/loginTab/index.js","components/Copyright/index.js"],"names":["loginSchema","Yup","username","required","password","useStyles","makeStyles","theme","paper","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","breadcrumb","LoginTab","setOpen","handleChangeTabIndex","classes","login","useAuth","replace","useHistory","state","useLocation","darkState","useCustomTheme","t","useTranslation","from","pathname","useFormik","initialValues","validationSchema","onSubmit","values","a","resetForm","handleChange","handleBlur","handleSubmit","errors","touched","isSubmitting","className","Avatar","variant","avatar","src","WhiteLogo","Logo","Typography","component","noValidate","TextField","fullWidth","name","autoComplete","id","label","error","helperText","value","onChange","onBlur","type","Button","color","disabled","Grid","container","item","xs","Link","onClick","Box","mt","Copyright","align","href","Date","getFullYear"],"mappings":"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","file":"static/js/10.19d80790.chunk.js","sourcesContent":["import * as Yup from 'yup'\n\nexport const loginSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n})\n","import React from 'react'\nimport {\n  makeStyles,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Link,\n  Box\n} from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useFormik } from 'formik'\n\nimport Logo from '../../../assets/images/logo.png'\nimport WhiteLogo from '../../../assets/images/whitelogo.png'\nimport Copyright from '../../../components/Copyright'\nimport { loginSchema } from '../../../validation/loginSchema'\nimport { useAuth } from '../../../context/useAuth'\nimport { useCustomTheme } from '../../../context/useCustomTheme'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nconst breadcrumb = 'src.pages.login'\n\nexport default function LoginTab({ setOpen, handleChangeTabIndex }) {\n  const classes = useStyles()\n  let { login } = useAuth()\n  let { replace } = useHistory()\n  let { state } = useLocation()\n  const { darkState } = useCustomTheme()\n  const { t } = useTranslation()\n\n  let { from } = state || { from: { pathname: '/' } }\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    errors,\n    touched,\n    isSubmitting,\n    resetForm\n  } = useFormik({\n    initialValues: {\n      username: 'chnirt',\n      password: '0'\n      // username: '',\n      // password: ''\n    },\n    validationSchema: loginSchema,\n    onSubmit: async (values) => {\n      // alert(JSON.stringify(values, null, 2));\n      setOpen(true)\n      const result = await login(values.username, values.password)\n\n      if (result) {\n        resetForm()\n        replace(from)\n      }\n      setOpen(false)\n    }\n  })\n\n  return (\n    <div className={classes.paper}>\n      <Avatar\n        variant=\"square\"\n        className={classes.avatar}\n        src={darkState ? WhiteLogo : Logo}\n      />\n      <Typography component=\"h1\" variant=\"h5\">\n        {t(`${breadcrumb}.LoginPage`)}\n      </Typography>\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"username\"\n          autoComplete=\"username\"\n          id={\n            errors.username && touched.username\n              ? 'standard-error-helper-text'\n              : 'username'\n          }\n          label={\n            errors.username && touched.username\n              ? 'Error Username'\n              : t(`${breadcrumb}.Username`)\n          }\n          error={errors.username && touched.username ? true : false}\n          helperText={\n            errors.username && touched.username ? errors.username : false\n          }\n          value={values.username}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          autoComplete=\"current-password\"\n          type=\"password\"\n          id={\n            errors.password && touched.password\n              ? 'standard-error-helper-text'\n              : 'password'\n          }\n          label={\n            errors.password && touched.password\n              ? 'Error Password'\n              : t(`${breadcrumb}.Password`)\n          }\n          error={errors.password && touched.password ? true : false}\n          helperText={\n            errors.password && touched.password ? errors.password : false\n          }\n          value={values.password}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={isSubmitting}\n        >\n          {t(`${breadcrumb}.Login`)}\n        </Button>\n        <Grid container>\n          <Grid item xs>\n            {/* <Link\n            variant=\"body2\"\n            onClick={() => {\n              handleChangeTabIndex(1)\n              resetForm()\n              // push('/register')\n            }}\n          >\n            {t(`${breadcrumb}.ForgotPassword`)}\n          </Link> */}\n          </Grid>\n          <Grid item>\n            <Link\n              variant=\"body2\"\n              onClick={() => {\n                handleChangeTabIndex(1)\n                resetForm()\n              }}\n            >\n              {t(`${breadcrumb}.DHAASU`)}\n            </Link>\n          </Grid>\n        </Grid>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport { useTranslation } from 'react-i18next'\n\nexport default function Copyright() {\n  const { t } = useTranslation()\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {t('src.components.Copyright.CopyRight') + ' Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/chnirt\">\n        Chnirt\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n"],"sourceRoot":""}